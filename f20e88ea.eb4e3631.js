(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{100:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return m}));var n=r(0),i=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=i.a.createContext({}),p=function(e){var t=i.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},b=function(e){var t=p(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=p(r),d=n,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||a;return r?i.a.createElement(m,s(s({ref:t},c),{},{components:r})):i.a.createElement(m,s({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},101:function(e,t,r){"use strict";var n=r(0),i=r(20);t.a=function(){const e=Object(n.useContext)(i.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},102:function(e,t,r){"use strict";r.d(t,"b",(function(){return a})),r.d(t,"a",(function(){return o}));var n=r(101),i=r(103);function a(){const{siteConfig:{baseUrl:e="/",url:t}={}}=Object(n.a)();return{withBaseUrl:(r,n)=>function(e,t,r,{forcePrependBaseUrl:n=!1,absolute:a=!1}={}){if(!r)return r;if(r.startsWith("#"))return r;if(Object(i.b)(r))return r;if(n)return t+r;const o=!r.startsWith(t)?t+r.replace(/^\//,""):r;return a?e+o:o}(t,e,r,n)}}function o(e,t={}){const{withBaseUrl:r}=a();return r(e,t)}},103:function(e,t,r){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!n(e)}r.d(t,"b",(function(){return n})),r.d(t,"a",(function(){return i}))},104:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return l}));var n=r(0),i=r.n(n),a=r(102);const o=e=>i.a.createElement("div",{style:{display:"inline-block",margin:2,overflow:"hidden",position:"relative",width:`calc(${100/e.cols}% - 4px)`}},e.children),s=e=>i.a.createElement("div",{style:{fontSize:"0px",margin:"20px 0"}},i.a.Children.map(e.children,t=>i.a.cloneElement(t,{cols:e.cols||4}))),l=e=>e.withoutLinks?i.a.createElement(o,{cols:e.cols},i.a.createElement("img",{src:Object(a.a)(e.src),alt:"result"})):i.a.createElement("a",{href:Object(a.a)(e.src),target:"_blank"},i.a.createElement(o,{cols:e.cols},i.a.createElement("img",{src:Object(a.a)(e.src),alt:"result"})))},95:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return p})),r.d(t,"default",(function(){return u}));var n=r(2),i=r(6),a=(r(0),r(100)),o=r(102),s=r(104),l={id:"differentProbabilitiesMapDescription",title:"Different probabilities",sidebar_label:"Different probabilities"},c={unversionedId:"differentProbabilitiesMapDescription",id:"version-1.0.6/differentProbabilitiesMapDescription",isDocsHomePage:!1,title:"Different probabilities",description:"In this tutorial, we will describe how to control the appearence of generated layouts by setting probabilities of choosing individual room shapes.",source:"@site/versioned_docs\\version-1.0.6\\differentProbabilitiesMapDescription.md",permalink:"/Edgar-DotNet/docs/differentProbabilitiesMapDescription",editUrl:"https://github.com/OndrejNepozitek/Edgar-DotNet/tree/docusaurus/versioned_docs/version-1.0.6/differentProbabilitiesMapDescription.md",version:"1.0.6",sidebar_label:"Different probabilities",sidebar:"version-1.0.6/someSidebar",previous:{title:"Different shapes",permalink:"/Edgar-DotNet/docs/differentShapesMapDescription"},next:{title:"Corridors",permalink:"/Edgar-DotNet/docs/corridorsMapDescription"}},p=[{value:"Setup",id:"setup",children:[]},{value:"Room shapes",id:"room-shapes",children:[{value:"Using C# api",id:"using-c-api",children:[]},{value:"Using config files",id:"using-config-files",children:[]}]},{value:"Adding probabilities",id:"adding-probabilities",children:[{value:"Using C# api",id:"using-c-api-1",children:[]},{value:"Using config files",id:"using-config-files-1",children:[]}]},{value:"Summary",id:"summary",children:[]},{value:"Results",id:"results",children:[]}],b={rightToc:p};function u(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"In this tutorial, we will describe how to control the appearence of generated layouts by setting probabilities of choosing individual room shapes."),Object(a.b)("h2",{id:"setup"},"Setup"),Object(a.b)("p",null,"In this tutorial, we will use a graph with 15 vertices codenamed ",Object(a.b)("em",{parentName:"p"},"Example5"),":"),Object(a.b)("img",{alt:"Graph",src:Object(o.a)("img/graphs/example5.svg")}),";",Object(a.b)("h2",{id:"room-shapes"},"Room shapes"),Object(a.b)("p",null,"We will define 2 square and 2 rectangle room shapes for this tutorial."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note:")," We need at least 3 room shapes for this tutorial to work. This is because when we perturb the shape of a node, we must always pick a different shape."),Object(a.b)("h3",{id:"using-c-api"},"Using C# api"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-csharp"}),"var doorMode = new OverlapMode(1, 1);\n\nvar squareRoomBig = new RoomDescription(\n  GridPolygon.GetSquare(8),\n  doorMode\n);\nvar squareRoomSmall = new RoomDescription(\n  GridPolygon.GetSquare(6),\n  doorMode\n);\nvar rectangleRoomBig = new RoomDescription(\n  GridPolygon.GetRectangle(8, 12),\n  doorMode\n);\nvar rectangleRoomSmall = new RoomDescription(\n  GridPolygon.GetRectangle(6, 10),\n  doorMode\n);\n")),Object(a.b)("h3",{id:"using-config-files"},"Using config files"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"# Resources/Rooms/tutorial_differentProbabilities.yaml\n\nname: tutorial_differentProbabilities\ndefault:\n  doorMode: !OverlapMode\n    doorLength: 1\n    cornerDistance: 1\nroomDescriptions:\n  square-big:\n    shape: [[0,0], [0,8], [8,8], [8,0]]\n  square-small:\n    shape: [[0,0], [0,6], [6,6], [6,0]]\n  rectangle-big:\n    shape: [[0,0], [0,8], [12,8], [12,0]]\n  rectangle-small:\n    shape: [[0,0], [0,6], [10,6], [10,0]]\n")),Object(a.b)("h2",{id:"adding-probabilities"},"Adding probabilities"),Object(a.b)("p",null,"We will now make the bigger square have ten times greater probability to be picked."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note:")," It is not guaranteed that generated layouts will obey a defined probability distribution. This is because some shapes are not suitable for the input graph and simulated annealing will have problems when trying to lay them out. And that will result in mostly accepting layouts without such shapes even if we set high probabilities to them."),Object(a.b)("h3",{id:"using-c-api-1"},"Using C# api"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-csharp"}),"var mapDescription = new MapDescription<int>();\n\n// Graph and shapes are created here.\n\nmapDescription.AddRoomShapes(squareRoomBig, probability: 10);\nmapDescription.AddRoomShapes(squareRoomSmall);\nmapDescription.AddRoomShapes(rectangleRoomBig);\nmapDescription.AddRoomShapes(rectangleRoomSmall);\n")),Object(a.b)("h3",{id:"using-config-files-1"},"Using config files"),Object(a.b)("p",null,"In previous tutorials, we always utilized the fact that we had all our room shapes in one file and we could therefore simply add all of them at once. In this tutorial, however, we want to specify the probability of one of the rooms shapes. That means that we have to add room shapes one by one instead of adding them all at once."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"# Resources/Maps/tutorial_differentProbabilities.yml\n\n# Rooms and passages are added here.\n\ndefaultRoomShapes:\n  -\n    setName: tutorial_differentProbabilities\n    roomDescriptionName: square-big\n    probability: 10\n  -\n    setName: tutorial_differentProbabilities\n    roomDescriptionName: square-small\n  -\n    setName: tutorial_differentProbabilities\n    roomDescriptionName: rectangle-big\n  -\n    setName: tutorial_differentProbabilities\n    roomDescriptionName: rectangle-small\n")),Object(a.b)("h2",{id:"summary"},"Summary"),Object(a.b)("p",null,"The map description is now ready to be used in a layout generator. You can find the full C# source code ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/OndrejNepozitek/ProceduralLevelGenerator/blob/master/Sandbox/Examples/DifferentProbabilitiesExample.cs"}),"here")," and the config files ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/OndrejNepozitek/ProceduralLevelGenerator/tree/master/Resources"}),"here"),"."),Object(a.b)("h2",{id:"results"},"Results"),Object(a.b)(s.a,{cols:2,mdxType:"Gallery"},Object(a.b)(s.b,{src:"img/differentProbabilities/0.jpg",mdxType:"GalleryImage"}),Object(a.b)(s.b,{src:"img/differentProbabilities/1.jpg",mdxType:"GalleryImage"}),Object(a.b)(s.b,{src:"img/differentProbabilities/2.jpg",mdxType:"GalleryImage"}),Object(a.b)(s.b,{src:"img/differentProbabilities/3.jpg",mdxType:"GalleryImage"})),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note:")," Click on images to see them in a full size."))}u.isMDXComponent=!0}}]);