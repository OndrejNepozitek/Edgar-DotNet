// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Edgar.NativeAotLib
{
    public partial class LevelDescriptionContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Edgar.Geometry.OrthogonalLineGrid2D>? _OrthogonalLineGrid2D;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Edgar.Geometry.OrthogonalLineGrid2D> OrthogonalLineGrid2D
        {
            get => _OrthogonalLineGrid2D ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Edgar.Geometry.OrthogonalLineGrid2D>)Options.GetTypeInfo(typeof(global::Edgar.Geometry.OrthogonalLineGrid2D));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Edgar.Geometry.OrthogonalLineGrid2D> Create_OrthogonalLineGrid2D(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::Edgar.Geometry.OrthogonalLineGrid2D>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Edgar.Geometry.OrthogonalLineGrid2D> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::Edgar.Geometry.OrthogonalLineGrid2D>
                {
                    ObjectCreator = null,
                    ObjectWithParameterizedConstructorCreator = static args => new global::Edgar.Geometry.OrthogonalLineGrid2D((global::Edgar.Geometry.Vector2Int)args[0], (global::Edgar.Geometry.Vector2Int)args[1], (global::Edgar.Geometry.OrthogonalLineGrid2D.Direction)args[2]),
                    PropertyMetadataInitializer = _ => OrthogonalLineGrid2DPropInit(options),
                    ConstructorParameterMetadataInitializer = OrthogonalLineGrid2DCtorParamInit,
                    SerializeHandler = OrthogonalLineGrid2DSerializeHandler
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::Edgar.Geometry.OrthogonalLineGrid2D>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] OrthogonalLineGrid2DPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[4];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<int>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Edgar.Geometry.OrthogonalLineGrid2D),
                Converter = null,
                Getter = static obj => ((global::Edgar.Geometry.OrthogonalLineGrid2D)obj).Length,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "Length",
                JsonPropertyName = null
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<int>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::Edgar.Geometry.Vector2Int>
            {
                IsProperty = false,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Edgar.Geometry.OrthogonalLineGrid2D),
                Converter = null,
                Getter = static obj => ((global::Edgar.Geometry.OrthogonalLineGrid2D)obj).From,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "From",
                JsonPropertyName = null
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::Edgar.Geometry.Vector2Int>(options, info1);

            var info2 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::Edgar.Geometry.Vector2Int>
            {
                IsProperty = false,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Edgar.Geometry.OrthogonalLineGrid2D),
                Converter = null,
                Getter = static obj => ((global::Edgar.Geometry.OrthogonalLineGrid2D)obj).To,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "To",
                JsonPropertyName = null
            };
            
            properties[2] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::Edgar.Geometry.Vector2Int>(options, info2);

            var info3 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::Edgar.Geometry.OrthogonalLineGrid2D.Direction>
            {
                IsProperty = false,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Edgar.Geometry.OrthogonalLineGrid2D),
                Converter = null,
                Getter = static obj => ((global::Edgar.Geometry.OrthogonalLineGrid2D)obj).degeneratedDirection,
                Setter = null,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "degeneratedDirection",
                JsonPropertyName = null
            };
            
            properties[3] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::Edgar.Geometry.OrthogonalLineGrid2D.Direction>(options, info3);

            return properties;
        }

        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance
        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.
        private void OrthogonalLineGrid2DSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::Edgar.Geometry.OrthogonalLineGrid2D value)
        {
            writer.WriteStartObject();

            writer.WriteNumber(PropName_Length, ((global::Edgar.Geometry.OrthogonalLineGrid2D)value).Length);

            writer.WriteEndObject();
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[] OrthogonalLineGrid2DCtorParamInit()
        {
            var parameters = new global::System.Text.Json.Serialization.Metadata.JsonParameterInfoValues[3];

            parameters[0] = new()
            {
                Name = "from",
                ParameterType = typeof(global::Edgar.Geometry.Vector2Int),
                Position = 0,
                HasDefaultValue = false,
                DefaultValue = default(global::Edgar.Geometry.Vector2Int)
            };
            
            parameters[1] = new()
            {
                Name = "to",
                ParameterType = typeof(global::Edgar.Geometry.Vector2Int),
                Position = 1,
                HasDefaultValue = false,
                DefaultValue = default(global::Edgar.Geometry.Vector2Int)
            };
            
            parameters[2] = new()
            {
                Name = "degeneratedDirection",
                ParameterType = typeof(global::Edgar.Geometry.OrthogonalLineGrid2D.Direction),
                Position = 2,
                HasDefaultValue = false,
                DefaultValue = default(global::Edgar.Geometry.OrthogonalLineGrid2D.Direction)
            };
            
            return parameters;
        }
    }
}
