// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Edgar.NativeAotLib
{
    public partial class LayoutContext : global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver
    {
        /// <inheritdoc/>
        public override global::System.Text.Json.Serialization.Metadata.JsonTypeInfo? GetTypeInfo(global::System.Type type)
        {
            Options.TryGetTypeInfo(type, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo? typeInfo);
            return typeInfo;
        }

        global::System.Text.Json.Serialization.Metadata.JsonTypeInfo? global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(global::System.Type type, global::System.Text.Json.JsonSerializerOptions options)
        {
            if (type == typeof(bool))
            {
                return Create_Boolean(options);
            }
            if (type == typeof(global::Edgar.Geometry.OrthogonalLineGrid2D))
            {
                return Create_OrthogonalLineGrid2D(options);
            }
            if (type == typeof(global::Edgar.Geometry.OrthogonalLineGrid2D.Direction))
            {
                return Create_Direction(options);
            }
            if (type == typeof(global::Edgar.Geometry.PolygonGrid2D))
            {
                return Create_PolygonGrid2D(options);
            }
            if (type == typeof(global::Edgar.Geometry.TransformationGrid2D))
            {
                return Create_TransformationGrid2D(options);
            }
            if (type == typeof(global::Edgar.Geometry.Vector2Int))
            {
                return Create_Vector2Int(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Common.Doors.DoorType))
            {
                return Create_DoorType(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Common.Doors.IDoorSocket))
            {
                return Create_IDoorSocket(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Common.RoomTemplateRepeatMode))
            {
                return Create_RoomTemplateRepeatMode(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Common.RoomTemplateRepeatMode?))
            {
                return Create_NullableRoomTemplateRepeatMode(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Grid2D.DoorGrid2D))
            {
                return Create_DoorGrid2D(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Grid2D.DoorLineGrid2D))
            {
                return Create_DoorLineGrid2D(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Grid2D.IDoorModeGrid2D))
            {
                return Create_IDoorModeGrid2D(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Grid2D.LayoutDoorGrid2D<int>))
            {
                return Create_LayoutDoorGrid2DInt32(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Grid2D.LayoutGrid2D<int>))
            {
                return Create_LayoutGrid2DInt32(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Grid2D.LayoutRoomGrid2D<int>))
            {
                return Create_LayoutRoomGrid2DInt32(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Grid2D.ManualDoorModeGrid2D))
            {
                return Create_ManualDoorModeGrid2D(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D))
            {
                return Create_RoomDescriptionGrid2D(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Grid2D.RoomTemplateGrid2D))
            {
                return Create_RoomTemplateGrid2D(options);
            }
            if (type == typeof(global::Edgar.GraphBasedGenerator.Grid2D.SimpleDoorModeGrid2D))
            {
                return Create_SimpleDoorModeGrid2D(options);
            }
            if (type == typeof(global::System.Collections.Generic.List<global::Edgar.Geometry.TransformationGrid2D>))
            {
                return Create_ListTransformationGrid2D(options);
            }
            if (type == typeof(global::System.Collections.Generic.List<global::Edgar.Geometry.Vector2Int>))
            {
                return Create_ListVector2Int(options);
            }
            if (type == typeof(global::System.Collections.Generic.List<global::Edgar.GraphBasedGenerator.Grid2D.DoorGrid2D>))
            {
                return Create_ListDoorGrid2D(options);
            }
            if (type == typeof(global::System.Collections.Generic.List<global::Edgar.GraphBasedGenerator.Grid2D.DoorLineGrid2D>))
            {
                return Create_ListDoorLineGrid2D(options);
            }
            if (type == typeof(global::System.Collections.Generic.List<global::Edgar.GraphBasedGenerator.Grid2D.LayoutDoorGrid2D<int>>))
            {
                return Create_ListLayoutDoorGrid2DInt32(options);
            }
            if (type == typeof(global::System.Collections.Generic.List<global::Edgar.GraphBasedGenerator.Grid2D.LayoutRoomGrid2D<int>>))
            {
                return Create_ListLayoutRoomGrid2DInt32(options);
            }
            if (type == typeof(global::System.Collections.Generic.List<global::Edgar.GraphBasedGenerator.Grid2D.RoomTemplateGrid2D>))
            {
                return Create_ListRoomTemplateGrid2D(options);
            }
            if (type == typeof(int))
            {
                return Create_Int32(options);
            }
            if (type == typeof(string))
            {
                return Create_String(options);
            }
            return null;
        }
    }
}
