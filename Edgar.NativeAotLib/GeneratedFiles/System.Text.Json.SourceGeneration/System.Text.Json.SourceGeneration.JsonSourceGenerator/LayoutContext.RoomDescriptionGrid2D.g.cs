// <auto-generated/>

#nullable enable annotations
#nullable disable warnings

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0612, CS0618

namespace Edgar.NativeAotLib
{
    public partial class LayoutContext
    {
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D>? _RoomDescriptionGrid2D;
        
        /// <summary>
        /// Defines the source generated JSON serialization contract metadata for a given type.
        /// </summary>
        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D> RoomDescriptionGrid2D
        {
            get => _RoomDescriptionGrid2D ??= (global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D>)Options.GetTypeInfo(typeof(global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D));
        }
        
        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D> Create_RoomDescriptionGrid2D(global::System.Text.Json.JsonSerializerOptions options)
        {
            if (!TryGetTypeInfoForRuntimeCustomConverter<global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D>(options, out global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D> jsonTypeInfo))
            {
                var objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D>
                {
                    ObjectCreator = () => new global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D(),
                    ObjectWithParameterizedConstructorCreator = null,
                    PropertyMetadataInitializer = _ => RoomDescriptionGrid2DPropInit(options),
                    ConstructorParameterMetadataInitializer = null,
                    SerializeHandler = RoomDescriptionGrid2DSerializeHandler
                };
                
                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D>(options, objectInfo);
                jsonTypeInfo.NumberHandling = null;
            }
        
            jsonTypeInfo.OriginatingResolver = this;
            return jsonTypeInfo;
        }

        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] RoomDescriptionGrid2DPropInit(global::System.Text.Json.JsonSerializerOptions options)
        {
            var properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[2];

            var info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<bool>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D),
                Converter = null,
                Getter = static obj => ((global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D)obj).IsCorridor,
                Setter = static (obj, value) => ((global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D)obj).IsCorridor = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "IsCorridor",
                JsonPropertyName = null
            };
            
            properties[0] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<bool>(options, info0);

            var info1 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.Collections.Generic.List<global::Edgar.GraphBasedGenerator.Grid2D.RoomTemplateGrid2D>>
            {
                IsProperty = true,
                IsPublic = true,
                IsVirtual = false,
                DeclaringType = typeof(global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D),
                Converter = null,
                Getter = static obj => ((global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D)obj).RoomTemplates,
                Setter = static (obj, value) => ((global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D)obj).RoomTemplates = value!,
                IgnoreCondition = null,
                HasJsonInclude = false,
                IsExtensionData = false,
                NumberHandling = null,
                PropertyName = "RoomTemplates",
                JsonPropertyName = null
            };
            
            properties[1] = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.Collections.Generic.List<global::Edgar.GraphBasedGenerator.Grid2D.RoomTemplateGrid2D>>(options, info1);

            return properties;
        }

        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance
        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.
        private void RoomDescriptionGrid2DSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D? value)
        {
            if (value == null)
            {
                writer.WriteNullValue();
                return;
            }
            
            writer.WriteStartObject();

            writer.WriteBoolean(PropName_IsCorridor, ((global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D)value).IsCorridor);
            writer.WritePropertyName(PropName_RoomTemplates);
            ListRoomTemplateGrid2DSerializeHandler(writer, ((global::Edgar.GraphBasedGenerator.Grid2D.RoomDescriptionGrid2D)value).RoomTemplates);

            writer.WriteEndObject();
        }
    }
}
